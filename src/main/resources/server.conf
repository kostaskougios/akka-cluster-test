akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "DEBUG"

  jvm-exit-on-fatal-error = false

  actor {
    provider = "cluster"
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
      maximum-frame-size = 32MB
    }
    retry-gate-closed-for = 500
  }

  cluster {
    roles = ["distmem-server"]
    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    # auto-down-unreachable-after = 60s

    seed-nodes = [
      "akka.tcp://distmem@127.0.0.1:2551"
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    #auto-down-unreachable-after = 10s

    pub-sub.gossip-interval = 150ms
  }

  dispatchers {
    split-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 8
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 32
    }
  }
}
